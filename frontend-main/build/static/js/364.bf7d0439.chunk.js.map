{"version":3,"file":"static/js/364.bf7d0439.chunk.js","mappings":"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","sources":["components/seller/SellerSidebar.jsx","pages/seller/ManageProducts.jsx"],"sourcesContent":["// src/components/seller/SellerSidebar.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DashboardOutlined,\n  ShoppingOutlined,\n  OrderedListOutlined,\n  DollarOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./SellerSidebar.css\";\n\nconst { Sider } = Layout;\n\nconst SellerSidebar = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedKey, setSelectedKey] = useState(\"1\");\n\n  useEffect(() => {\n    switch (location.pathname) {\n      case \"/seller/dashboard\":\n        setSelectedKey(\"1\");\n        break;\n      case \"/seller/products\":\n        setSelectedKey(\"2\");\n        break;\n      case \"/seller/orders\":\n        setSelectedKey(\"3\");\n        break;\n      case \"/seller/earnings\":\n        setSelectedKey(\"4\");\n        break;\n      default:\n        setSelectedKey(\"1\");\n    }\n  }, [location.pathname]);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"sellerToken\");\n    navigate(\"/seller/login\");\n  };\n\n  return (\n    <Sider collapsible className=\"seller-sidebar\">\n      <Menu theme=\"dark\" mode=\"vertical\" selectedKeys={[selectedKey]}>\n        <Menu.Item key=\"1\" icon={<DashboardOutlined />} onClick={() => navigate(\"/seller/dashboard\")}>\n          Dashboard\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<ShoppingOutlined />} onClick={() => navigate(\"/seller/products\")}>\n          Manage Products\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<OrderedListOutlined />} onClick={() => navigate(\"/seller/orders\")}>\n          Manage Orders\n        </Menu.Item>\n        <Menu.Item key=\"4\" icon={<DollarOutlined />} onClick={() => navigate(\"/seller/earnings\")}>\n          Earnings\n        </Menu.Item>\n        <Menu.Item key=\"5\" icon={<LogoutOutlined />} onClick={handleLogout}>\n          Logout\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n};\n\nexport default SellerSidebar;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Table,\r\n  Button,\r\n  Select,\r\n  Modal,\r\n  message,\r\n  Input,\r\n  Form,\r\n  InputNumber,\r\n  Upload,\r\n  Image,\r\n  Space,\r\n  Switch,\r\n} from \"antd\";\r\nimport { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\nimport SellerSidebar from \"../../components/seller/SellerSidebar\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst STATUS_OPTIONS = [\"Active\", \"Inactive\"];\r\nconst API_BASE_URL = \"http://localhost:5001/api/products\";\r\n\r\nconst ManageProducts = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingProductId, setEditingProductId] = useState(null);\r\n  const [productData, setProductData] = useState({\r\n    primaryImage: null,\r\n    primaryImagePreview: \"\",\r\n    secondaryImages: [],\r\n    secondaryImagePreviews: [],\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"sellerToken\");\r\n      const { data } = await axios.get(`${API_BASE_URL}/seller`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setProducts(data);\r\n      setFilteredProducts(data);\r\n    } catch (error) {\r\n      console.error(\"Fetch Error:\", error);\r\n      message.error(\"Failed to load products.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(\r\n      (product) =>\r\n        product.productName.toLowerCase().includes(value.toLowerCase()) ||\r\n        product.category.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleStatusToggle = async (productId, isActive) => {\r\n    try {\r\n      const token = localStorage.getItem(\"sellerToken\");\r\n      await axios.put(\r\n        `${API_BASE_URL}/status/${productId}`,\r\n        { status: isActive ? \"Active\" : \"Inactive\" },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      message.success(\"Product status updated!\");\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error(\"Status Toggle Error:\", error);\r\n      message.error(\"Failed to update status.\");\r\n    }\r\n  };\r\n\r\n  const showModal = async (product = null) => {\r\n    setModalVisible(true);\r\n    form.resetFields();\r\n\r\n    if (product) {\r\n      setEditingProductId(product._id);\r\n      try {\r\n        const token = localStorage.getItem(\"sellerToken\");\r\n        const { data } = await axios.get(`${API_BASE_URL}/${product._id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        form.setFieldsValue(data);\r\n        setProductData({\r\n          primaryImagePreview: data.primaryImage,\r\n          secondaryImagePreviews: data.secondaryImages || [],\r\n          primaryImage: null,\r\n          secondaryImages: [],\r\n        });\r\n      } catch (error) {\r\n        message.error(\"Failed to fetch product data.\");\r\n      }\r\n    } else {\r\n      setEditingProductId(null);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n    form.resetFields();\r\n    setProductData({\r\n      primaryImage: null,\r\n      primaryImagePreview: \"\",\r\n      secondaryImages: [],\r\n      secondaryImagePreviews: [],\r\n    });\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const isImage = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n    if (!isImage) message.error(\"Only JPG/PNG images are allowed!\");\r\n    if (!isLt2M) message.error(\"Image must be smaller than 2MB!\");\r\n\r\n    return isImage && isLt2M;\r\n  };\r\n\r\n  const handlePrimaryImageUpload = ({ file }) => {\r\n    if (validateFile(file)) {\r\n      setProductData((prev) => ({\r\n        ...prev,\r\n        primaryImage: file,\r\n        primaryImagePreview: URL.createObjectURL(file),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSecondaryImageUpload = ({ file }) => {\r\n    if (validateFile(file)) {\r\n      setProductData((prev) => ({\r\n        ...prev,\r\n        secondaryImages: [...prev.secondaryImages, file],\r\n        secondaryImagePreviews: [\r\n          ...prev.secondaryImagePreviews,\r\n          URL.createObjectURL(file),\r\n        ],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      const sellerId = localStorage.getItem(\"sellerId\");\r\n      const token = localStorage.getItem(\"sellerToken\");\r\n\r\n      const formData = new FormData();\r\n      Object.entries(values).forEach(([key, value]) => {\r\n        formData.append(key, value);\r\n      });\r\n\r\n      if (productData.primaryImage) {\r\n        formData.append(\"primaryImage\", productData.primaryImage);\r\n      }\r\n\r\n      (productData.secondaryImages || []).forEach((file) =>\r\n        formData.append(\"secondaryImages\", file)\r\n      );\r\n\r\n      formData.append(\"sellerId\", sellerId);\r\n\r\n      const url = editingProductId\r\n        ? `${API_BASE_URL}/update/${editingProductId}`\r\n        : `${API_BASE_URL}/add`;\r\n\r\n      const method = editingProductId ? \"put\" : \"post\";\r\n\r\n      await axios[method](url, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      message.success(editingProductId ? \"Product updated!\" : \"Product added!\");\r\n      fetchProducts();\r\n      closeModal();\r\n    } catch (error) {\r\n      message.error(\"Failed to submit.\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (productId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"sellerToken\");\r\n      await axios.delete(`${API_BASE_URL}/delete/${productId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      message.success(\"Product deleted successfully!\");\r\n      fetchProducts();\r\n    } catch (error) {\r\n      message.error(\"Failed to delete product.\");\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: \"Name\", dataIndex: \"productName\", key: \"productName\" },\r\n    { title: \"Category\", dataIndex: \"category\", key: \"category\" },\r\n    { title: \"Company\", dataIndex: \"companyName\", key: \"companyName\" },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      sorter: (a, b) => a.price - b.price,\r\n    },\r\n    {\r\n      title: \"Stock\",\r\n      dataIndex: \"stock\",\r\n      key: \"stock\",\r\n      sorter: (a, b) => a.stock - b.stock,\r\n    },\r\n    {\r\n      title: \"Created At\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      render: (date) => new Date(date).toLocaleDateString(),\r\n      sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      filters: [\r\n        { text: \"Active\", value: \"Active\" },\r\n        { text: \"Inactive\", value: \"Inactive\" },\r\n      ],\r\n      onFilter: (value, record) => record.status === value,\r\n      render: (status, record) => (\r\n        <Switch\r\n          checked={status === \"Active\"}\r\n          onChange={(checked) => handleStatusToggle(record._id, checked)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button onClick={() => showModal(record)}>Edit</Button>\r\n          <Button danger onClick={() => handleDelete(record._id)}>Delete</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <SellerSidebar />\r\n      <Content style={{ padding: 24 }}>\r\n        <Space style={{ marginBottom: 16 }}>\r\n          <Input.Search\r\n            placeholder=\"Search by name or category\"\r\n            value={searchTerm}\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            style={{ width: 300 }}\r\n            allowClear\r\n          />\r\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => showModal()}>\r\n            Add Product\r\n          </Button>\r\n        </Space>\r\n\r\n        <Table\r\n          dataSource={filteredProducts}\r\n          columns={columns}\r\n          rowKey=\"_id\"\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n\r\n        <Modal\r\n          open={modalVisible}\r\n          title={editingProductId ? \"Edit Product\" : \"Add Product\"}\r\n          onCancel={closeModal}\r\n          onOk={handleSubmit}\r\n        >\r\n          <Form form={form} layout=\"vertical\">\r\n            <Form.Item label=\"Product Name\" name=\"productName\" rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Category\" name=\"category\" rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Company Name\" name=\"companyName\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Original Price\" name=\"originalPrice\">\r\n              <InputNumber style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Price\" name=\"price\">\r\n              <InputNumber style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Stock\" name=\"stock\">\r\n              <InputNumber style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Specifications\" name=\"specifications\">\r\n              <TextArea rows={3} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Shipping Policy\" name=\"shippingPolicy\">\r\n              <TextArea rows={2} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Return Policy\" name=\"returnPolicy\">\r\n              <TextArea rows={2} />\r\n            </Form.Item>\r\n            <Form.Item label=\"Status\" name=\"status\">\r\n              <Select>\r\n                {STATUS_OPTIONS.map((status) => (\r\n                  <Option key={status} value={status}>{status}</Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Primary Image\">\r\n              <Upload showUploadList={false} customRequest={handlePrimaryImageUpload}>\r\n                <Button icon={<UploadOutlined />}>Upload</Button>\r\n              </Upload>\r\n              {productData.primaryImagePreview && (\r\n                <Image src={productData.primaryImagePreview} width={120} style={{ marginTop: 10 }} />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"Secondary Images\">\r\n              <Upload showUploadList={false} customRequest={handleSecondaryImageUpload}>\r\n                <Button icon={<UploadOutlined />}>Upload</Button>\r\n              </Upload>\r\n              <Space>\r\n                {productData.secondaryImagePreviews.map((src, index) => (\r\n                  <Image key={index} src={src} width={80} />\r\n                ))}\r\n              </Space>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ManageProducts;"],"names":["Sider","Layout","SellerSidebar","navigate","useNavigate","location","useLocation","selectedKey","setSelectedKey","useState","useEffect","pathname","_jsx","collapsible","className","children","_jsxs","Menu","theme","mode","selectedKeys","Item","icon","DashboardOutlined","onClick","ShoppingOutlined","OrderedListOutlined","DollarOutlined","LogoutOutlined","handleLogout","localStorage","removeItem","Content","Option","Select","TextArea","Input","STATUS_OPTIONS","API_BASE_URL","ManageProducts","loading","setLoading","products","setProducts","filteredProducts","setFilteredProducts","searchTerm","setSearchTerm","modalVisible","setModalVisible","editingProductId","setEditingProductId","productData","setProductData","primaryImage","primaryImagePreview","secondaryImages","secondaryImagePreviews","form","Form","useForm","fetchProducts","async","token","getItem","data","axios","get","headers","Authorization","error","console","message","showModal","product","arguments","length","undefined","resetFields","_id","setFieldsValue","closeModal","validateFile","file","isImage","type","isLt2M","size","columns","title","dataIndex","key","sorter","a","b","price","stock","render","date","Date","toLocaleDateString","createdAt","filters","text","value","onFilter","record","status","Switch","checked","onChange","productId","isActive","put","success","handleStatusToggle","_","Space","Button","danger","delete","handleDelete","style","padding","marginBottom","Search","placeholder","e","filtered","filter","productName","toLowerCase","includes","category","handleSearch","target","width","allowClear","PlusOutlined","Table","dataSource","rowKey","pagination","pageSize","Modal","open","onCancel","onOk","values","validateFields","sellerId","formData","FormData","Object","entries","forEach","_ref3","append","url","method","layout","label","name","rules","required","InputNumber","rows","map","Upload","showUploadList","customRequest","_ref","prev","URL","createObjectURL","UploadOutlined","Image","src","marginTop","_ref2","index"],"sourceRoot":""}