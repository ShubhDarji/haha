{"version":3,"file":"static/js/524.69d8cf81.chunk.js","mappings":"8OAKA,MAAM,MAAEA,EAAK,KAAEC,GAASC,EAAAA,EAkExB,EAhEoBC,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,MA8BjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,OAAQC,UAAW,SAAUC,UAAW,SAAUC,SAAA,EACtFC,EAAAA,EAAAA,KAACd,EAAK,CAACe,MAAO,EAAEF,SAAC,kBAEjBP,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,OAAO,WAAWC,SAhCRC,UAClB,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,KAAK,uCAAwCC,IACpE,MAAEC,EAAK,OAAEC,GAAWL,EAG1B,IAAKI,IAAUC,IAAWA,EAAOC,IAC/B,MAAM,IAAIC,MAAM,0BAIlB,IAAKF,EAAOG,WAEV,OADAC,EAAAA,GAAQC,QAAQ,2DACT1B,EAAS,iBAAkB,CAAE2B,MAAO,CAAEC,MAAOP,EAAOO,SAI7DC,aAAaC,QAAQ,cAAeV,GACpCS,aAAaC,QAAQ,WAAYT,EAAOC,KAExCG,EAAAA,GAAQM,QAAQ,oCAChBC,YAAW,IAAMhC,EAAS,sBAAsB,KAClD,CAAE,MAAOiC,GAAQ,IAADC,EAAAC,EACdC,QAAQH,MAAM,eAAgBA,GAC9BR,EAAAA,GAAQQ,OAAW,OAALA,QAAK,IAALA,GAAe,QAAVC,EAALD,EAAOI,gBAAQ,IAAAH,GAAM,QAANC,EAAfD,EAAiBlB,YAAI,IAAAmB,OAAhB,EAALA,EAAuBV,UAAW,kCAClD,GAOiDa,oBAAkB,EAAA7B,SAAA,EAC/DC,EAAAA,EAAAA,KAACE,EAAAA,EAAK2B,KAAI,CACRC,KAAK,QACLC,MAAM,QACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,KAAM,QAASnB,QAAS,gCAAiChB,UAEnFC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CAACC,YAAY,wBAGrBpC,EAAAA,EAAAA,KAACE,EAAAA,EAAK2B,KAAI,CACRC,KAAK,WACLC,MAAM,WACNC,MAAO,CAAC,CAAEC,UAAU,EAAMlB,QAAS,0BAA2BhB,UAE9DC,EAAAA,EAAAA,KAACmC,EAAAA,EAAME,SAAQ,CAACD,YAAY,2BAG9BpC,EAAAA,EAAAA,KAACsC,EAAAA,GAAM,CAACJ,KAAK,UAAUK,SAAS,SAASC,OAAK,EAAAzC,SAAC,cAKjDP,EAAAA,EAAAA,MAACL,EAAI,CAAAY,SAAA,CAAC,gCACmBC,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAG,iBAAgB3C,SAAC,sBAE9C,C","sources":["components/auth/SellerLogin.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button, message, Card, Typography } from \"antd\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst SellerLogin = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (values) => {\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:5001/api/auth/login\", values);\r\n      const { token, seller } = data;\r\n\r\n      // Validate response structure\r\n      if (!token || !seller || !seller._id) {\r\n        throw new Error(\"Invalid login response\");\r\n      }\r\n\r\n      // Check email verification\r\n      if (!seller.isVerified) {\r\n        message.warning(\"Email not verified. Redirecting to verification page...\");\r\n        return navigate(\"/seller/verify\", { state: { email: seller.email } });\r\n      }\r\n\r\n      // Save token and user ID\r\n      localStorage.setItem(\"sellerToken\", token);\r\n      localStorage.setItem(\"sellerId\", seller._id);\r\n\r\n      message.success(\"Login successful! Redirecting...\");\r\n      setTimeout(() => navigate(\"/seller/dashboard\"), 1500);\r\n    } catch (error) {\r\n      console.error(\"Login Error:\", error);\r\n      message.error(error?.response?.data?.message || \"Login failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card style={{ maxWidth: 500, margin: \"auto\", textAlign: \"center\", marginTop: \"100px\" }}>\r\n      <Title level={2}>Seller Login</Title>\r\n\r\n      <Form layout=\"vertical\" onFinish={handleLogin} scrollToFirstError>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[{ required: true, type: \"email\", message: \"Please enter a valid email!\" }]}\r\n        >\r\n          <Input placeholder=\"Enter your email\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[{ required: true, message: \"Password is required!\" }]}\r\n        >\r\n          <Input.Password placeholder=\"Enter your password\" />\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" block>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n\r\n      <Text>\r\n        Donâ€™t have an account? <Link to=\"/seller/signup\">Sign up here</Link>\r\n      </Text>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SellerLogin;"],"names":["Title","Text","Typography","SellerLogin","navigate","useNavigate","_jsxs","Card","style","maxWidth","margin","textAlign","marginTop","children","_jsx","level","Form","layout","onFinish","async","data","axios","post","values","token","seller","_id","Error","isVerified","message","warning","state","email","localStorage","setItem","success","setTimeout","error","_error$response","_error$response$data","console","response","scrollToFirstError","Item","name","label","rules","required","type","Input","placeholder","Password","Button","htmlType","block","Link","to"],"sourceRoot":""}