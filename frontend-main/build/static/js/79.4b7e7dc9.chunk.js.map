{"version":3,"file":"static/js/79.4b7e7dc9.chunk.js","mappings":"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","sources":["components/auth/SellerSignup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, message, Card } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SellerSignup = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [formValues, setFormValues] = useState({});\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Personal Details\",\r\n      content: (\r\n        <>\r\n          <Form.Item name=\"name\" label=\"Full Name\" rules={[{ required: true, message: \"Name is required!\" }]}>\r\n            <Input placeholder=\"Enter Full Name\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"email\" label=\"Email\" rules={[{ required: true, type: \"email\", message: \"Valid email required!\" }]}>\r\n            <Input placeholder=\"Enter Email\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"phone\" label=\"Phone Number\" rules={[{ required: true, message: \"Phone number is required!\" }]}>\r\n            <Input placeholder=\"Enter Phone Number\" />\r\n          </Form.Item>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Business Details\",\r\n      content: (\r\n        <>\r\n          <Form.Item name=\"businessName\" label=\"Business Name\" rules={[{ required: true, message: \"Business Name is required!\" }]}>\r\n            <Input placeholder=\"Enter Business Name\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"gstNumber\" label=\"GST Number\" rules={[{ required: true, message: \"GST Number is required!\" }]}>\r\n            <Input placeholder=\"Enter GST Number\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"address\" label=\"Business Address\" rules={[{ required: true, message: \"Address is required!\" }]}>\r\n            <Input placeholder=\"Enter Business Address\" />\r\n          </Form.Item>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Security\",\r\n      content: (\r\n        <>\r\n          <Form.Item name=\"password\" label=\"Password\" rules={[{ required: true, message: \"Password is required!\" }]}>\r\n            <Input.Password placeholder=\"Enter Password\" />\r\n          </Form.Item>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleNext = async (values) => {\r\n    setFormValues((prev) => ({ ...prev, ...values }));\r\n    setCurrentStep((prev) => prev + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep((prev) => prev - 1);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    const finalData = { ...formValues, ...values };\r\n  \r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"http://localhost:5001/api/auth/signup\", finalData, {\r\n        withCredentials: true,\r\n      });\r\n  \r\n      message.success(\"Signup successful! Verification code sent to email.\");\r\n      setTimeout(() => navigate(\"/seller/verify\", { state: { email: finalData.email } }), 1000);\r\n  \r\n    } catch (error) {\r\n      message.error(error.response?.data?.message || \"Signup failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Card style={{ maxWidth: \"90%\", margin: \"auto\", textAlign: \"center\", marginTop: \"5vh\" }}>\r\n      <h2>Seller Signup - {steps[currentStep].title}</h2>\r\n      \r\n      <Form\r\n        layout=\"vertical\"\r\n        initialValues={formValues}\r\n        onFinish={currentStep === steps.length - 1 ? handleSubmit : handleNext}\r\n        scrollToFirstError\r\n      >\r\n        {steps[currentStep].content}\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          {currentStep > 0 && (\r\n            <Button style={{ marginRight: 8 }} onClick={handlePrevious}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            {currentStep === steps.length - 1 ? \"Submit\" : \"Next\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SellerSignup;"],"names":["SellerSignup","navigate","useNavigate","loading","setLoading","useState","currentStep","setCurrentStep","formValues","setFormValues","steps","title","content","_jsxs","_Fragment","children","_jsx","Form","Item","name","label","rules","required","message","Input","placeholder","type","Password","Card","style","maxWidth","margin","textAlign","marginTop","layout","initialValues","onFinish","length","async","finalData","values","axios","post","withCredentials","success","setTimeout","state","email","error","_error$response","_error$response$data","response","data","prev","scrollToFirstError","Button","marginRight","onClick","handlePrevious","htmlType"],"sourceRoot":""}